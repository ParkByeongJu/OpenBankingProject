create sequence HISTORY_NO;

CREATE TABLE "MEMBER" (
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"PASSWO_PW"	VARCHAR2(255)		NOT NULL,
	"MEMBER_NM"	VARCHAR2(255)		NOT NULL,
	"MEMBER_EM"	VARCHAR2(255)		NOT NULL,
	"MEMBER_BIR"	DATE		NOT NULL,
	"MEMBER_PH"	VARCHAR2(255)		NOT NULL,
	"MEMBER_POST"	NUMBER(5)		NULL,
	"MEMBER_FULLADDR"	VARCHAR2(255)		NULL,
	"MEMBER_EXTRAADDR"	VARCHAR2(255)		NULL,
	"MEMBER_ROLE"	VARCHAR2(50)		NOT NULL,
	"OPENBANKING_STATUS"	VARCHAR2(255)		NOT NULL
);

select * from member;

CREATE TABLE "ACCOUNT" (
	"ACCOUNT_ID"	NUMBER(15)		NOT NULL,
	"BANK_CD"	VARCHAR2(255)		NOT NULL,
	"ACCOUNT_BL"	NUMBER(30)		NOT NULL,
	"ACCOUNT_DATE"	DATE		NOT NULL,
	"ACCOUNT_PW"	NUMBER(4)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"PRODUCT_CD"	NUMBER(15)		NOT NULL,
	"PW_CNT"	INT		NOT NULL,
	"DORMANT_ACC"	INT		NOT NULL,
	"ACCOUNT_NM"	VARCHAR2(255)		NULL
);

select * from Account;

update account
set account_bl = 100000000000
where account_id = '202306280022';
commit;

CREATE TABLE "PRODUCT" (
	"PRODUCT_CD"	NUMBER(15)		NOT NULL,
	"PRODUCT_CT"	VARCHAR2(255)		NULL,
	"PRODUCT_RATE"	INT		NULL,
	"PRODUCT_NM"	VARCHAR2(255)		NOT NULL,
	"PRODUCT_CL"	VARCHAR2(255)		NULL
);

alter table product
add PRODUCT_STAT int;

DELETE FROM product
WHERE product_cd = '1000';


insert into product (product_cd,PRODUCT_CT, PRODUCT_RATE,PRODUCT_NM,PRODUCT_CL, PRODUCT_STAT) VALUES (1000, '연 이자율 10%<br>지금 당장 가입하세요!!', '10', 'BjBank 적금', '적금', 1);

commit;

select * from product;

CREATE TABLE "HISTORY" (
	"NO"	NUMBER(15)		NOT NULL,
	"BANK_CD"	VARCHAR2(255)		NOT NULL,
	"ACCOUNT_ID"	NUMBER(15)		NOT NULL,
	"HISTORY_DATE"	DATE		NOT NULL,
	"DEPOSIT_HS"	VARCHAR2(255)		NOT NULL,
	"WITHDRAWAL_HS"	VARCHAR2(255)		NOT NULL,
	"TR_BANK"	INT		NOT NULL,
	"TR_ACCOUNT"	NUMBER(15)		NOT NULL,
	"HISTORY_BL"	NUMBER(30)		NOT NULL
);

ALTER TABLE HISTORY MODIFY HISTORY_DATE TIMESTAMP DEFAULT current_timestamp;

CREATE TABLE "BANK_INFO" (
	"BANK_CD"	VARCHAR2(255)		NOT NULL,
	"BANK_NM"	VARCHAR2(10)		NOT NULL
);

insert into bank_info (bank_cd, bank_nm) VALUES ('0413', 'BjBank');
commit;

CREATE TABLE "BOARD" (
	"BOARD_CD"	NUMBER(15)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"BOARD_CT"	VARCHAR2(4000)		NULL,
	"BOARD_DATE"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP		NOT NULL,
	"BOARD_NOTICE"	NUMBER(1)		NOT NULL,
	"BOARD_HIT"	INT		NOT NULL
);

CREATE TABLE "BOARD_COMMENT" (
	"COMMENT_NO"	NUMBER(15)		NOT NULL,
	"BOARD_CD"	NUMBER(15)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"COMMENT_CT"	VARCHAR2(4000)		NULL
);

CREATE TABLE "QUESTION_BOARD" (
	"QUESTION_NO"	NUMBER(15)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"QUESTION_CT"	VARCHAR2(4000)		NULL,
	"QUESTION_DATE"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP		NOT NULL
);

CREATE TABLE "QUESTION_COMMENT" (
	"QCOMMENT_NO"	NUMBER(15)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"QCOMMENT_CT"	VARCHAR2(4000)		NULL,
	"QCOMMENT_DATE"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP		NOT NULL
);

CREATE TABLE "BOARD_REPLY" (
	"REPLY_NO"	NUMBER(15)		NOT NULL,
	"BOARD_CD"	NUMBER(15)		NOT NULL,
	"MEMBER_ID"	VARCHAR2(255)		NOT NULL,
	"REPLY_CT"	VARCHAR2(4000)		NULL,
	"REPLY_DATE"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP		NOT NULL,
	"REPLY_HIT"	INT		NOT NULL,
	"REPLY_DEPTH"	NUMBER		NOT NULL
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_ID"
);

ALTER TABLE "ACCOUNT" ADD CONSTRAINT "PK_ACCOUNT" PRIMARY KEY (
	"ACCOUNT_ID",
	"BANK_CD"
);

ALTER TABLE "PRODUCT" ADD CONSTRAINT "PK_PRODUCT" PRIMARY KEY (
	"PRODUCT_CD"
);

ALTER TABLE "HISTORY" ADD CONSTRAINT "PK_HISTORY" PRIMARY KEY (
	"NO"
);

ALTER TABLE "BANK_INFO" ADD CONSTRAINT "PK_BANK_INFO" PRIMARY KEY (
	"BANK_CD"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_CD"
);

ALTER TABLE "BOARD_COMMENT" ADD CONSTRAINT "PK_BOARD_COMMENT" PRIMARY KEY (
	"COMMENT_NO"
);

ALTER TABLE "QUESTION_BOARD" ADD CONSTRAINT "PK_QUESTION_BOARD" PRIMARY KEY (
	"QUESTION_NO"
);

ALTER TABLE "QUESTION_COMMENT" ADD CONSTRAINT "PK_QUESTION_COMMENT" PRIMARY KEY (
	"QCOMMENT_NO"
);

ALTER TABLE "BOARD_REPLY" ADD CONSTRAINT "PK_BOARD_REPLY" PRIMARY KEY (
	"REPLY_NO"
);

ALTER TABLE "ACCOUNT" ADD CONSTRAINT "FK_BANK_INFO_TO_ACCOUNT_1" FOREIGN KEY (
	"BANK_CD"
)
REFERENCES "BANK_INFO" (
	"BANK_CD"
);



